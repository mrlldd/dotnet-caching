<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mrlldd.Caching</name>
    </assembly>
    <members>
        <member name="T:mrlldd.Caching.Caches.Cache">
            <summary>
            The cache service-wrapper that provides generic access to generic caches.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.SetAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for performing a caching.
            </summary>
            <param name="value">The value.</param>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.Set``1(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for performing a caching.
            </summary>
            <param name="value">The value.</param>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.GetAsync``1(System.Threading.CancellationToken)">
            <summary>
            The method used for retrieving data from cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.Get``1(System.Threading.CancellationToken)">
            <summary>
            The method used for retrieving data from cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
            <returns>The value of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.RefreshAsync``1(System.Threading.CancellationToken)">
            <summary>
            The method used for refreshing data expiration in cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.Refresh``1(System.Threading.CancellationToken)">
            <summary>
            The method used for refreshing data expiration in cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.RemoveAsync``1(System.Threading.CancellationToken)">
            <summary>
            The method used for removing data from cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache.Remove``1(System.Threading.CancellationToken)">
            <summary>
            The method used for removing data from cache.
            </summary>
            <param name="token">The cancellation token.</param>
            <typeparam name="T">The type of value.</typeparam>
        </member>
        <member name="T:mrlldd.Caching.Caches.Cache`1">
            <summary>
            The base class for implementing caches.
            </summary>
            <typeparam name="T">The cached objects type.</typeparam>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.CacheKeyPrefixesFactory">
            <inheritdoc />
        </member>
        <member name="P:mrlldd.Caching.Caches.Cache`1.DefaultKeySuffix">
            <summary>
            The default key suffix for given cache type.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.SetAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.Set(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.GetAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.Get(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.RefreshAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.Refresh(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.RemoveAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caches.Cache`1.Remove(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:mrlldd.Caching.Caching`1">
            <summary>
            The base class for implementing caching utilities.
            </summary>
            <typeparam name="T">The cached objects type.</typeparam>
        </member>
        <member name="P:mrlldd.Caching.Caching`1.MemoryCacheOptions">
            <summary>
            The options used to set up the memory cache for given object type.
            </summary>
        </member>
        <member name="P:mrlldd.Caching.Caching`1.DistributedCacheOptions">
            <summary>
            The options used to set up the distributed cache for given object type.
            </summary>
        </member>
        <member name="P:mrlldd.Caching.Caching`1.CacheKey">
            <summary>
            The global cache key for given object type.
            </summary>
        </member>
        <member name="P:mrlldd.Caching.Caching`1.KeyPartsDelimiter">
            <summary>
            Delimiter used in cache key formatting.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.Populate(mrlldd.Caching.Stores.IMemoryCacheStore,mrlldd.Caching.Stores.IDistributedCacheStore,mrlldd.Caching.Stores.IStoreOperationProvider)">
            <inheritdoc />
        </member>
        <member name="P:mrlldd.Caching.Caching`1.IsUsingMemory">
            <inheritdoc />
        </member>
        <member name="P:mrlldd.Caching.Caching`1.IsUsingDistributed">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Caching`1.PerformCaching(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            A method for storing data to cache.
            </summary>
            <param name="data">The data to be stored in cache.</param>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.PerformCachingAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            A method for storing data to cache.
            </summary>
            <param name="data">The data to be stored in cache.</param>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.TryGetFromCache(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for retrieving cached data entry.
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns data or null.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.TryGetFromCacheAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for retrieving cached data entry.
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns data or null.</returns>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.Refresh(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for refreshing cached data entry expiration. 
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.RefreshAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for refreshing cached data entry expiration. 
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.Remove(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for removing cached data entry expiration. 
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            A method for removing cached data entry expiration. 
            </summary>
            <param name="keySuffix">The suffix extension to generated cache key.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Caching`1.CacheKeyPrefixesFactory">
            <summary>
            The method used for creating additional global cache keys prefixes in order to make them more unique.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> of prefixes.</returns>
        </member>
        <member name="T:mrlldd.Caching.Extensions.DependencyInjection.CachingServiceCollectionExtensions">
            <summary>
            The class that contains extensions methods for dependency injection of utilities used by that library.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Extensions.DependencyInjection.CachingServiceCollectionExtensions.Decorate``1(mrlldd.Caching.Extensions.DependencyInjection.ICachingServiceCollection)">
            <summary>
            The method used for registering custom decorators of caching stores.
            </summary>
            <param name="cachingServiceCollection">The caching service collection.</param>
            <typeparam name="T">The type of decorator class that implements <see cref="T:mrlldd.Caching.Stores.Decoration.ICacheStoreDecorator"/>.</typeparam>
            <returns>The caching service collection.</returns>
        </member>
        <member name="M:mrlldd.Caching.Extensions.DependencyInjection.CachingServiceCollectionExtensions.WithDefaultCacheOptions(mrlldd.Caching.Extensions.DependencyInjection.ICachingServiceCollection,mrlldd.Caching.Caches.ICacheOptions)">
            <summary>
            The method used for registering custom options for default caches.
            </summary>
            <param name="cachingServiceCollection">The caching service collection.</param>
            <param name="cacheOptions">The cache options.</param>
            <returns>The caching service collection.</returns>
        </member>
        <member name="T:mrlldd.Caching.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            The class that contains extensions methods for dependency injection of caching utilities.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            The method used for adding the caching utilities to service container.
            </summary>
            <param name="services">The service collection.</param>
            <param name="assembly">The assembly that contains implemented cached utilities and used in order to collect those types and add them to container.</param>
            <returns>The service collection.</returns>
        </member>
        <member name="T:mrlldd.Caching.Loaders.CachingLoader">
            <summary>
            The cache service-wrapper that provides generic access to generic loaders.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.GetOrLoadAsync``2(``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The method used for getting (if cached) or loading the object of result type.
            </summary>
            <param name="args">The argument.</param>
            <param name="omitCacheOnLoad">The boolean that indicates if cache should be omitted on getting (means there should be only load and caching).</param>
            <param name="token">The cancellation token.</param>
            <typeparam name="TArgs">The type of arguments.</typeparam>
            <typeparam name="TResult">The type of result.</typeparam>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns the object of result type.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.GetOrLoad``2(``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The method used for getting (if cached) or loading the object of result type.
            </summary>
            <param name="args">The argument.</param>
            <param name="omitCacheOnLoad">The boolean that indicates if cache should be omitted on getting (means there should be only load and caching).</param>
            <param name="token">The cancellation token.</param>
            <returns>The object of result <typeparamref name="TResult"/> type.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.SetAsync``2(``0,``1,System.Threading.CancellationToken)">
            <summary>
            The method used for setting the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="result">The data.</param>
            <param name="token">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.Set``2(``0,``1,System.Threading.CancellationToken)">
            <summary>
            The method used for setting the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="result">The data.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.GetAsync``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for getting the object entry of result type from cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns the object of result type.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.Get``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for getting the object entry of result type from cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
            <returns>The object of result <typeparamref name="TResult"/> type.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.RefreshAsync``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for refreshing the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.Refresh``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for refreshing the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.RemoveAsync``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for removing the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader.Remove``2(``0,System.Threading.CancellationToken)">
            <summary>
            The method used for removing the object entry of result type in cache.
            </summary>
            <param name="args">The argument.</param>
            <param name="token">The cancellation token.</param>
        </member>
        <member name="T:mrlldd.Caching.Loaders.CachingLoader`2">
            <summary>
            The base class for implemented caching loaders
            </summary>
            <typeparam name="TArgs">Loading argument type.</typeparam>
            <typeparam name="TResult">Loading result type.</typeparam>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.GetOrLoadAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.GetOrLoad(`0,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.SetAsync(`0,`1,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.Set(`0,`1,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.GetAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.Get(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.RefreshAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.Refresh(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.RemoveAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.Remove(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.CacheKeyPrefixesFactory">
            <summary>
            The sealed factory method used for creating the global cache key prefixes.
            </summary>
            <returns>The collection of prefixes.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.LoadAsync(`0,System.Threading.CancellationToken)">
            <summary>
            The abstract method for loading of objects of result type.
            </summary>
            <param name="args">The arguments.</param>
            <param name="token">The cancellation token.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> that returns object of result type.</returns>
        </member>
        <member name="M:mrlldd.Caching.Loaders.CachingLoader`2.CacheKeySuffixFactory(`0)">
            <summary>
            The abstract method for creating cache key suffix in order to make stored items keys really unique,
            the returned string should be kinda hash of argument.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The additional cache key suffix.</returns>
        </member>
        <member name="T:mrlldd.Caching.Stores.ServiceCollectionExtensions">
            <summary>
            The class that contains extensions methods for dependency injection of caching stores.
            </summary>
        </member>
        <member name="M:mrlldd.Caching.Stores.ServiceCollectionExtensions.AddCachingStores(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            The method for registering caching stores used by caches and loaders.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The service collection.</returns>
        </member>
    </members>
</doc>
